{"version":3,"sources":["lib/constants.js","lib/utils.js","lib/animations.js","lib/Element.js","lib/eventHandlers.js","index.js"],"names":["constants","IN_VIEW","MOVEMENT_DISTANCE","TRANSITION_TIME","utils","inView","element","inViewDistance","viewHeight","window","innerHeight","getBoundingClientRect","top","getHrefTarget","e","hrefParts","target","href","split","scrollToTarget","length","includes","getRandomBool","Math","floor","random","getNewElement","name","elements","document","querySelectorAll","animations","initial","transform","clientConfigs","originalStyles","getPreAnimateMatrix","opacity","apply","originalValue","scaleFactor","direction","booleanSign","offset","value","parseInt","position0","position1","position2","position3","position5","valueX","valueY","abs","Element","elementToAnimate","options","constansts","animation","_getAnimationObj","originalStyle","getComputedStyle","clientProvidedInitials","style","transition","time","initializePosition","Object","keys","forEach","key","Function","result","eventHandlers","elementInstances","_getElementInstances","elementSelectors","elementIndex","elementSelector","animationDirection","directions","_getDirection","push","splice","join","bool","each","i","instance","Array","isArray","currentDirection","handleScrollAnimation","animate","smoothScrollToAnchor","preventDefault","console","error","getElementById","scrollIntoView","behavior","block","initializeInstances","elementsToAnimate","scrollDomAnimation","onload","onscroll"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["const constants = {\r\n    IN_VIEW: 50, // top - vh\r\n    MOVEMENT_DISTANCE: 50,\r\n    TRANSITION_TIME: '0.3'\r\n}\r\n\r\nexport default constants;","import constants from './constants';\r\n\r\n/**\r\n * contains helper functions\r\n * @returns {Object} \r\n */\r\nexport default function utils() {\r\n    /**\r\n         * takes an element and checks of its in view\r\n         * @param {Object} element\r\n         * @returns {Boolean}\r\n         */\r\n        function inView(element, inViewDistance = constants.IN_VIEW) {\r\n            const viewHeight = window.innerHeight;\r\n            return viewHeight - element.getBoundingClientRect().top > inViewDistance ? true\r\n                : false;\r\n        }\r\n    /**\r\n     * returns the href target stripped\r\n     * @param {Event} e takes an event object\r\n     * @returns {String}\r\n     */\r\n    function getHrefTarget(e) {\r\n        const hrefParts = e.target.href.split('/');\r\n        let scrollToTarget = hrefParts[hrefParts.length - 1];\r\n        if (scrollToTarget.includes('#')) {\r\n            scrollToTarget = scrollToTarget.split('#')[1]\r\n        } else {\r\n            scrollToTarget = false;\r\n        }\r\n        return scrollToTarget;\r\n    }\r\n\r\n    function getRandomBool() {\r\n        return Math.floor(Math.random() * 2) && true;\r\n    }\r\n\r\n    function getNewElement(name) {\r\n        const elements = document.querySelectorAll(name);\r\n        if (elements.length === 1) return elements[0];\r\n        return elements;\r\n    }\r\n\r\n    return {\r\n        inView,\r\n        getHrefTarget,\r\n        getRandomBool,\r\n        getNewElement\r\n    }\r\n}","import constants from './constants';\r\n\r\n/**\r\n * each animation property has initial and apply objects.\r\n * \r\n * initial is to initialize the position before animation.\r\n * apply contains the desitination values which is the original value. \r\n * \r\n * properties could be functions or strings. functions accept original value \r\n * property which is used in case the user already had set a value for the corresponing property \r\n * in his css to avoid conflictions. example: if user already has a transformX(-50px) on the element, \r\n * we want to return the element to that value instead of 0px;\r\n * \r\n */\r\nconst animations = {\r\n    '<-': {\r\n        initial: {\r\n            transform: (clientConfigs, originalStyles) => getPreAnimateMatrix(clientConfigs, originalStyles, '<-'),\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) =>  originalValue && originalValue !== 'none' ? originalValue : `translateX(0)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    },\r\n    '->': {\r\n        initial: {\r\n            transform: (clientConfigs, originalStyles) => getPreAnimateMatrix(clientConfigs, originalStyles, '->'),\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : `translateX(0)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    '^': {\r\n        initial: {\r\n            transform: (clientConfigs, originalStyles) => getPreAnimateMatrix(clientConfigs, originalStyles, '^'),\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue || `translateY(0)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    'v': {\r\n        initial: {\r\n            transform: (clientConfigs, originalStyles) => getPreAnimateMatrix(clientConfigs, originalStyles, 'v'),\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue || `translateY(0)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    '/^': {\r\n        initial: {\r\n            transform: (clientConfigs, originalStyles) => getPreAnimateMatrix(clientConfigs, originalStyles, '/^'),\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue || `translate(0px, 0px)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    'v/': {\r\n        initial: {\r\n            transform: (clientConfigs, originalStyles) => getPreAnimateMatrix(clientConfigs, originalStyles, 'v/'),\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue || `translate(0px, 0px)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    '.o': {\r\n        initial: {\r\n            transform: (clientConfigs) => `scale(${clientConfigs.scaleFactor ? 1 - clientConfigs.scaleFactor : '0.7'})`,\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : `scale(1)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    'o.': {\r\n        initial: {\r\n            transform: (clientConfigs) => `scale(${clientConfigs.scaleFactor ? 1 + clientConfigs.scaleFactor : '1.1'})`,\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            transform: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : `scale(1)`,\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n    '*': {\r\n        initial: {\r\n            opacity: '0',\r\n        },\r\n        apply: {\r\n            opacity: (originalValue) => originalValue && originalValue !== 'none' ? originalValue : '1'\r\n        }\r\n    }, \r\n     \r\n}\r\n\r\n/**\r\n * computes pre animation matrix based on client provided configs and original client css values.\r\n * we take original css into consideration to return elements to their original position in\r\n * case client uses the same css properties we modify here.\r\n *  \r\n * matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())\r\n * \r\n * @param {Object} clientConfigs client options per element\r\n * @param {Object} originalStyles original client css\r\n * @param {String} direction \r\n */ \r\nfunction getPreAnimateMatrix(clientConfigs, originalStyles, direction) {\r\n    if(direction === '^' || direction === 'v') {\r\n        let booleanSign = direction === '^' ? '' : '-' \r\n        let offset = clientConfigs.offset || constants.MOVEMENT_DISTANCE;\r\n        let transform = originalStyles.transform;\r\n        \r\n        offset = booleanSign === '-' ? offset*(-1) : offset;\r\n        if(transform && transform !== 'none') {\r\n            let value = parseInt(transform.split(',')[5].split(')')[0]);\r\n            value = offset ? value + offset : value + constants.MOVEMENT_DISTANCE;\r\n            return `matrix(1, 0, 0, 1, 0, ${value})`\r\n        } else {\r\n            return `matrix(1, 0, 0, 1, 0, ${offset})`;\r\n        } \r\n    } else if(direction === '->' || direction === '<-') {\r\n        let booleanSign = direction === '<-' ? '' : '-' \r\n        let offset = clientConfigs.offset || constants.MOVEMENT_DISTANCE;\r\n        let transform = originalStyles.transform;\r\n\r\n        offset = booleanSign === '-' ? offset*(-1) : offset;\r\n        if(transform && transform !== 'none') {\r\n            let position0 = parseInt(transform.split(',')[0].split('(')[1])\r\n            let position1 = parseInt(transform.split(',')[1].split(',')[0])\r\n            let position2 = parseInt(transform.split(',')[2].split(',')[0])\r\n            let position3 = parseInt(transform.split(',')[3].split(',')[0])\r\n            let position5 = parseInt(transform.split(',')[5].split(',')[0])\r\n            let value = parseInt(transform.split(',')[4].split(',')[0]);\r\n            value = offset ? value + offset : value + constants.MOVEMENT_DISTANCE;\r\n            return `matrix(${position0}, ${position1}, ${position2}, ${position3}, ${value}, ${position5})`\r\n        } else {\r\n            return `matrix(1, 0, 0, 1, ${offset}, 0)`;\r\n        } \r\n    } else if(direction === '/^' || direction === 'v/') {\r\n        let booleanSign = direction === '/^' ? '' : '-' \r\n        let offset = clientConfigs.offset || constants.MOVEMENT_DISTANCE;\r\n        let transform = originalStyles.transform;\r\n\r\n        offset = booleanSign === '-' ? offset*(-1) : offset;\r\n        if(transform && transform !== 'none') {\r\n            let position0 = parseInt(transform.split(',')[0].split('(')[1])\r\n            let position1 = parseInt(transform.split(',')[1].split(',')[0])\r\n            let position2 = parseInt(transform.split(',')[2].split(',')[0])\r\n            let position3 = parseInt(transform.split(',')[3].split(',')[0])\r\n            let valueX = parseInt(transform.split(',')[4].split(',')[0]);\r\n            let valueY = parseInt(transform.split(',')[5].split(')')[0]);\r\n            valueX = offset ? value + offset : value + constants.MOVEMENT_DISTANCE;\r\n            valueY = offset ? value + offset : value + constants.MOVEMENT_DISTANCE;\r\n            return `matrix(${position0}, ${position1}, ${position2}, ${position3}, ${valueX}, ${valueY})`\r\n        } else {\r\n            if(booleanSign === '-') {\r\n                return `matrix(1, 0, 0, 1, ${Math.abs(offset)}, ${offset})`;\r\n            } else {\r\n                return `matrix(1, 0, 0, 1, ${offset*(-1)}, ${offset})`;\r\n            }\r\n        }  \r\n    }\r\n}\r\n\r\nexport default animations;","import constants from './constants';\r\nimport animations from './animations';\r\nimport utils from './utils';\r\n\r\nlet { inView } = utils();\r\n\r\nexport default class Element {\r\n    constructor(elementToAnimate, direction, options) {\r\n        this.constansts = constants; \r\n        this.animation = this._getAnimationObj(direction);\r\n        this.element = elementToAnimate;\r\n        this.originalStyle = {...getComputedStyle(elementToAnimate)};\r\n        this.clientProvidedInitials = options || {};\r\n        this.element.style.transition = `${options.time || constants.TRANSITION_TIME}s linear`;\r\n\r\n        /** if element is in view on page load we keep it */\r\n        if(!inView(this.element, options.inViewDistance)) {\r\n            // this.animate();\r\n            this.initializePosition();\r\n        }\r\n    }\r\n\r\n    initializePosition() {\r\n        const keys = Object.keys(this.animation.initial);\r\n        keys.forEach(key => {\r\n            let value = this.animation.initial[key] instanceof Function ? this.animation.initial[key](this.clientProvidedInitials, this.originalStyle) \r\n                : this.animation.initial[key];\r\n            this.element.style[key] = value;\r\n        })\r\n    }\r\n\r\n    animate() {\r\n        const keys = Object.keys(this.animation.apply);\r\n        keys.forEach(key => {\r\n            let value;\r\n            value = this.animation.apply[key] instanceof Function ? this.animation.apply[key](this.originalStyle[key]) \r\n                : this.animation.apply[key];   \r\n            this.element.style[key] = value;\r\n        })\r\n    }\r\n\r\n    _getAnimationObj(direction) {\r\n        if(typeof direction !== 'string') throw 'direction value must be of type string';\r\n\r\n        let result = 'random';\r\n        if(direction === '') return result;\r\n\r\n        result = animations[direction];\r\n        if(!result) throw 'animation direction provided does not exist';\r\n        \r\n        return result;\r\n    }\r\n}","import util from './utils';\r\nimport Element from './Element';\r\nconst { getNewElement, inView } = util();\r\n\r\nexport default  function eventHandlers(inViewDistance) {\r\n        let elementInstances = [];\r\n    \r\n        function handleScrollAnimation(e) {\r\n            (function animateInstances() {\r\n                elementInstances.forEach(element => {\r\n                    if(inView(element.element, inViewDistance)) {\r\n                        element.animate();\r\n                    } else {\r\n                        element.initializePosition();\r\n                    }\r\n                })\r\n            })()\r\n        }\r\n    \r\n        const initializeInstances = (elementsToAnimate) => () => {\r\n            if(!(elementsToAnimate instanceof Array)) throw \"argument must be of type array\";\r\n    \r\n            if(elementsToAnimate[0] instanceof Array) {\r\n                // sample input: [[selector, direction, options], [...same]]\r\n                elementsToAnimate.forEach(elementSelector => {\r\n                    _getElementInstances(elementSelector);\r\n                })            \r\n            } else if(typeof elementsToAnimate[0] === 'string') {\r\n                /** \r\n                * this is an optimized for when user provides selector as argument rather\r\n                * than an array of selectors\r\n                * sample input: ['.selector', direction, options]\r\n                */                    \r\n                _getElementInstances(elementsToAnimate);\r\n            } else {\r\n                throw \"argument must be of type array. Example 1: ['.selector', '->', options] \\n Example 2: [['.selector', '->', options], [], []]\"\r\n            }        \r\n        }\r\n    \r\n        function _getElementInstances(elementSelectors) {\r\n            const elementIndex = elementSelectors[2] ? elementSelectors[2].elementIndex : false;\r\n            const elementSelector = elementSelectors[0];\r\n            const animationDirection = elementSelectors[1] ? elementSelectors[1] : '';\r\n            const options = elementSelectors[2] || { time: null, offset: null, inViewDistance, elementIndex };\r\n            const elements = getNewElement(elementSelector);\r\n            const directions = _getDirection(animationDirection);\r\n    \r\n            if(!elements.forEach) {\r\n                let instance = new Element(elements, animationDirection, options);\r\n                elementInstances = [...elementInstances, instance];\r\n            } else {\r\n                let bool = true;\r\n                elements.forEach((each, i) => {\r\n                    if(elementIndex && !elementIndex.includes(i)) return;\r\n                    let instance;\r\n    \r\n                    if(Array.isArray(directions)) {\r\n                        let currentDirection = bool ? directions[0] : directions[1];\r\n                        bool = !bool;\r\n                        instance = new Element(each, currentDirection, options)\r\n                    } else {\r\n                        instance = new Element(each, animationDirection, options)\r\n                    }\r\n                    elementInstances = [...elementInstances, instance];\r\n                });\r\n            }\r\n        }\r\n    \r\n        function smoothScrollToAnchor(e) {\r\n            e.preventDefault();\r\n            const scrollToTarget = getHrefTarget(e);\r\n            if(!scrollToTarget) return console.error('href attribute on the element provided does not contain an anchor');\r\n        \r\n            const targetElement = document.getElementById(scrollToTarget);\r\n            targetElement.scrollIntoView({ behavior: \"smooth\", block: 'start' })\r\n        }\r\n    \r\n        function _getDirection(direction) {\r\n            if(direction.length === 4) {\r\n                let result = [];\r\n                result.push(direction.split('').splice(0, 2).join(''))\r\n                result.push(direction.split('').splice(2, 4).join(''))\r\n                return result;\r\n            } else if(direction === '^v' || direction === 'v^') {\r\n                return ['^', 'v']\r\n            } else {\r\n                return direction;\r\n            }\r\n        }\r\n    \r\n        return {\r\n            handleScrollAnimation,\r\n            smoothScrollToAnchor,\r\n            initializeInstances\r\n        }\r\n    }","import utils from './lib/utils.js';\r\nimport constants from './lib/constants.js';\r\nimport eventHandlers from './lib/eventHandlers.js';\r\nconst { getHrefTarget, inView } = utils();\r\n\r\n/**\r\n * @typedef {\"^\"|\"v\"|\"->\"|\"<-\"|\".o\"|\"o.\"|\".oo.\"|\"o..o\"|\"*\"|\"-><-\"|\"<-->\"|\"^v\"|\"v^\"|\"/^\"|\"v/\"|\"v//^\"} Directions\r\n * @typedef {[string, Directions]} ElementSelector\r\n */\r\n\r\nconst scrollDomAnimation = (function() {\r\n    let inViewDistance = constants.IN_VIEW;\r\n    const scrollDomAnimation = {}\r\n    \r\n    scrollDomAnimation.configure = function(options) {\r\n        if(!options) return;\r\n        if(!(options instanceof Object)) throw 'argument must be of type Object'\r\n\r\n        inViewDistance = options.inViewDistance || constants.IN_VIEW;\r\n    }\r\n\r\n    // TODO: add support for object arguments\r\n    /**\r\n     * \r\n     * @param {ElementSelector[]} elementSelectors \r\n     */\r\n    scrollDomAnimation.animate = function(elementSelectors) {\r\n        if(!elementSelectors instanceof Array) throw 'options must be of type array';\r\n\r\n        const { handleScrollAnimation, initializeInstances } = eventHandlers(inViewDistance);\r\n\r\n        window.onload = initializeInstances(elementSelectors);\r\n        window.onscroll = handleScrollAnimation;\r\n    }\r\n\r\n    /**\r\n     *  takes event object and scrolls smoothly to the href value of the target element\r\n     *  @param {Event} event takes the event object provided by the eventlistener \r\n     *  */ \r\n    scrollDomAnimation.smoothScroll = function (e) {\r\n        e.preventDefault();\r\n        const scrollToTarget = getHrefTarget(e);\r\n            \r\n\r\n        const targetElement = document.getElementById(scrollToTarget);\r\n        targetElement.scrollIntoView({ behavior: \"smooth\", block: 'start' })\r\n    }\r\n\r\n    return scrollDomAnimation;\r\n})()\r\n\r\nexport default scrollDomAnimation;"]}